/*
 * generated by Xtext 2.25.0
 */
grammar InternalSalarioLiquido;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package br.ufrn.ppgti.ppgti1007.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufrn.ppgti.ppgti1007.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.ufrn.ppgti.ppgti1007.services.SalarioLiquidoGrammarAccess;

}
@parser::members {
	private SalarioLiquidoGrammarAccess grammarAccess;

	public void setGrammarAccess(SalarioLiquidoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSalarios
entryRuleSalarios
:
{ before(grammarAccess.getSalariosRule()); }
	 ruleSalarios
{ after(grammarAccess.getSalariosRule()); } 
	 EOF 
;

// Rule Salarios
ruleSalarios 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSalariosAccess().getSalariosAssignment()); }
		(rule__Salarios__SalariosAssignment)*
		{ after(grammarAccess.getSalariosAccess().getSalariosAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSalario
entryRuleSalario
:
{ before(grammarAccess.getSalarioRule()); }
	 ruleSalario
{ after(grammarAccess.getSalarioRule()); } 
	 EOF 
;

// Rule Salario
ruleSalario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSalarioAccess().getGroup()); }
		(rule__Salario__Group__0)
		{ after(grammarAccess.getSalarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble
entryRuleDouble
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleAccess().getGroup()); }
		(rule__Double__Group__0)
		{ after(grammarAccess.getDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group__0__Impl
	rule__Salario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getSalarioKeyword_0()); }
	'Salario'
	{ after(grammarAccess.getSalarioAccess().getSalarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group__1__Impl
	rule__Salario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getValorAssignment_1()); }
	(rule__Salario__ValorAssignment_1)
	{ after(grammarAccess.getSalarioAccess().getValorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group__2__Impl
	rule__Salario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getGroup_2()); }
	(rule__Salario__Group_2__0)?
	{ after(grammarAccess.getSalarioAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group__3__Impl
	rule__Salario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getGroup_3()); }
	(rule__Salario__Group_3__0)?
	{ after(grammarAccess.getSalarioAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getGroup_4()); }
	(rule__Salario__Group_4__0)?
	{ after(grammarAccess.getSalarioAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Salario__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group_2__0__Impl
	rule__Salario__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getDependentesKeyword_2_0()); }
	'Dependentes'
	{ after(grammarAccess.getSalarioAccess().getDependentesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getDependentesAssignment_2_1()); }
	(rule__Salario__DependentesAssignment_2_1)
	{ after(grammarAccess.getSalarioAccess().getDependentesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Salario__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group_3__0__Impl
	rule__Salario__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getDescontosKeyword_3_0()); }
	'Descontos'
	{ after(grammarAccess.getSalarioAccess().getDescontosKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getDescontosAssignment_3_1()); }
	(rule__Salario__DescontosAssignment_3_1)
	{ after(grammarAccess.getSalarioAccess().getDescontosAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Salario__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group_4__0__Impl
	rule__Salario__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getPrevidenciaKeyword_4_0()); }
	'Previdencia'
	{ after(grammarAccess.getSalarioAccess().getPrevidenciaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Salario__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSalarioAccess().getPrevidenciaAssignment_4_1()); }
	(rule__Salario__PrevidenciaAssignment_4_1)
	{ after(grammarAccess.getSalarioAccess().getPrevidenciaAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__0__Impl
	rule__Double__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getGroup_1()); }
	(rule__Double__Group_1__0)?
	{ after(grammarAccess.getDoubleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group_1__0__Impl
	rule__Double__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Salarios__SalariosAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalariosAccess().getSalariosSalarioParserRuleCall_0()); }
		ruleSalario
		{ after(grammarAccess.getSalariosAccess().getSalariosSalarioParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__ValorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalarioAccess().getValorDoubleParserRuleCall_1_0()); }
		ruleDouble
		{ after(grammarAccess.getSalarioAccess().getValorDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__DependentesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalarioAccess().getDependentesINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSalarioAccess().getDependentesINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__DescontosAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalarioAccess().getDescontosDoubleParserRuleCall_3_1_0()); }
		ruleDouble
		{ after(grammarAccess.getSalarioAccess().getDescontosDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Salario__PrevidenciaAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSalarioAccess().getPrevidenciaDoubleParserRuleCall_4_1_0()); }
		ruleDouble
		{ after(grammarAccess.getSalarioAccess().getPrevidenciaDoubleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

/*
 * generated by Xtext 2.25.0
 */
package br.ufrn.ppgti.ppgti1007.ide.contentassist.antlr;

import br.ufrn.ppgti.ppgti1007.ide.contentassist.antlr.internal.InternalSalarioLiquidoParser;
import br.ufrn.ppgti.ppgti1007.services.SalarioLiquidoGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class SalarioLiquidoParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(SalarioLiquidoGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, SalarioLiquidoGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getSalarioAccess().getGroup(), "rule__Salario__Group__0");
			builder.put(grammarAccess.getSalarioAccess().getGroup_2(), "rule__Salario__Group_2__0");
			builder.put(grammarAccess.getSalarioAccess().getGroup_3(), "rule__Salario__Group_3__0");
			builder.put(grammarAccess.getSalarioAccess().getGroup_4(), "rule__Salario__Group_4__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup_1(), "rule__Double__Group_1__0");
			builder.put(grammarAccess.getSalariosAccess().getSalariosAssignment(), "rule__Salarios__SalariosAssignment");
			builder.put(grammarAccess.getSalarioAccess().getValorAssignment_1(), "rule__Salario__ValorAssignment_1");
			builder.put(grammarAccess.getSalarioAccess().getDependentesAssignment_2_1(), "rule__Salario__DependentesAssignment_2_1");
			builder.put(grammarAccess.getSalarioAccess().getDescontosAssignment_3_1(), "rule__Salario__DescontosAssignment_3_1");
			builder.put(grammarAccess.getSalarioAccess().getPrevidenciaAssignment_4_1(), "rule__Salario__PrevidenciaAssignment_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private SalarioLiquidoGrammarAccess grammarAccess;

	@Override
	protected InternalSalarioLiquidoParser createParser() {
		InternalSalarioLiquidoParser result = new InternalSalarioLiquidoParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SalarioLiquidoGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SalarioLiquidoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
